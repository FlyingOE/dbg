/ debugger tests
\l dbg.q

.d2.out:{(::)};

setEnv:{.d2.e:10000; t::([] a:til 10;b:til 10); d1::(1 2 3;1 2 3;1 2 3); d2::(1;`a`b`c!1 2 3;`a`b`c!1 2 3); d3::(1;([a:1 2 3;b:1 2 3] c:1 2 3; d:1 2 3));
  d4::(1;([] a:1 2 3; b:1 2 3);2); tk::([] c:til 10)!t; d5::enlist[`a]!(),2;
  .tst.a3:0; .d2.bd[]; .d2.noDbg:1b; .d2.na:0b; .d2.tm:0D00:05; .d2.skpns:`q`o`h`Q;
 };
runTest:{setEnv[];r1:@[y;0;::];setEnv[];r2:@[{.d2.r[x;0]};y;::];
  if[not r1~r2;-1 "Test ",string[x]," failed: ",.Q.s1[r1]," vs ",.Q.s1 r2]};

runTest2:{setEnv[];r:@[y;0;0b];if[not r;-1 "Test2 ",string[x]," failed."]};

\d .tst
a:10;
a2:20;
tst:1000;
f:{a3::100; a+.tst.a2+a3+.tst.a3+tst};
\d .

tests:(
  {((::) 1;flip enlist 1 2 3;neg 10;first 1 2;reciprocal 10.1;where 010b;reverse 1 2 3;null (1;0N;2);group 1 2 2 3;string `test)}; / check that built in fns behave
  {(enlist `a;count 1 2 3;floor 11.12;not 101b;key `a`b!1 2;distinct 1 2 2 3;type {};value (+;1;2);avg 1 2 3f;last 1 2 3;sum 1 2 3)};
  {(prd 1 2 3;min 1 2 3;max 1 2 3;getenv `PATH;abs 1 -2;10+20;20-11;11*3;9%6;2&6;7|3;1^1 0N 2;10=11 23 10;3<2 6 9;2>1 3 5;"x"$"tst")};
  {(1 2,3 4;2#1 2 3 4;2_1 2 3 4;1~`q;![`a`b;1 2];1 2 3?2;@[{x+1};10];.[{x+y};(3;5)];1 in 1 2 3;1 within 10 20;"abc" like "a*")};
  {(1 2 3 bin 2;ss["str str";"str"];1 2 3 wsum 1 2 3;1 2 3 wavg 1 2 3;10 div 3)};
  {((1;2;3;4;5;6;7;8;9;10);(1;2;3))}; / test some enlist exps, missing args
  {((1;2;;3);(1;;3;;5;6;;8;9;10))};
  {{z}[;;;;;;;;;;]};
  {{l:(x+y;x+:1;y:4); l,:9 10 11 12 13 14; l[3]:100; l[4 5]:110; l[6 7]:(120;130); l}[1;2]}; / test assignments general case
  {({x[1]:20}[1 2 3];{:x[1]:20};x:100)}; / should not return val after idx assignment but should return it with explicit return & in simple assign
  {v:`a`b!(1 2;3 4);v[`a;1]+:100;v}; / deep assignment
  {.tst.g:`a`b!(1 2;3 4);.tst.g[`a;1]+:100; ({.tst.g2:100}[];.tst.g)}; / to global, no return for global
  {.tst.f[]}; / namespaces are ok in dbg
  {(();0;1;,;`;::)}; / consts
  {if[0;l:1];l}; / default local vals are ()
  {1;(10+@[{x+`a};1;10];10+.[{x+y+`a};1 2;20])}; / catch an exception
  {1;(10+@[{x+1;'string x+100};1;10]+10;10+.[{x+y;'a};1 2;20]+20)};
  {@[{@[{'tst};1;flip]};1;::]}; / double exception
  {.[{.[{'tst};1 1;flip]};1 1;::]};
  {i:0;do[10;i+:10];do[0;i+:100];j:0;$[0;1;while[j<10;$[j>5;j+:2;j+:1];if[j=5;j:6]]];(i;j)}; / block expressions
  {{$[x=0;x+1;x=1;x+2;x=2;x+3;x+4]}each til 4};
  {f:{x+y};(f[1]2;f[;1]2;f[;][1;2];f[;][1]2)}; / parted funcs
  {{[a;b;c;d;e;f] a,b,c,d,e,f}[;2;][3;;4][;1;5]6}; / check order
  {.[{x+y}] (1;2)}; / apps
  {(@[1 2 3;1;neg];@[1 2 3;1 2;neg];@[1 2 3;1;{x+1}];@[1 2 3;1 2;{x+1}])}; / @[x;y;z] except the catch block
  {.tst.v:.tst.v2:1 2 3;(@[.tst.v;1;neg];@[.tst.v2;1 2;neg];@[.tst.v;1;{x+1}];@[.tst.v2;1 2;{x+1}])};
  {(@[1 2 3;1;+;10];@[1 2 3;1 2;+;10];@[`a,1 2 3;1;+;10 20];@[1 2 3;1 2;+;10 20];@[1 2 3;1;{x+2*y};10];@[`a,1 2 3;1;{x+2*y};10 20];@[1 2 3;1 2;{x+2*y};10];@[1 2 3;1 2;{x+2*y};10 20])}; / @[x;y;z;w]
  {(.[1 2 3;();{x+10}];.[1 2 3;(),1;{x+10}];.[1 2 3;enlist 1 2;{x+10}];.[1 2 3;(),(::);{x+10}];@[{.[1 2 3;1;{x+10}]};1;::])}; / .[x;y;z] - depth 1/0
  {(.[d1;(();1);{x+10}];.[d1;(2;());{x+10}];.[d1;(();());{x+10}];.[d1;(::;1);{x+10}];.[d1;(2;::);{x+10}];.[d1;(2;1);{x+10}];.[d1;(2;1 2);{x+10}];.[d1;(0 2;1);{x+10}];.[d1;(0 2;0 1);{x+10}])}; / depth 2
  {(.[d2;(1;`a);{x+10}];.[d2;(1;`a`b);{x+10}];.[d2;(1 2;`a);{x+10}];.[d2;(1 2;`a`b);{x+10}])};
  {(.[d3;(1;`a`b!1 1);{x+10}];.[d3;(1;`a`b!1 1;`c);{x+10}];.[d3;(1;([]a:1 2;b:1 2));{x+10}];.[d3;(1;([]a:1 2;b:1 2);`c);{x+10}])}; / really complex structure
  {(.[d4;(1;::);{x+10}];.[d4;(1;1);{x+10}];.[d4;(1;1 2);{x+10}];.[d4;(1;1 2;`a);{x+10}];.[d4;(1;::;`a);{x+10}])};
  {(.[1 2 3;();{x+y};10];.[1 2 3;();{x+y};10 20 30];.[1 2 3;(),1;{x+y};10];.[1 2 3;enlist 1 2;{x+y};10];.[1 2 3;enlist 1 2;{x+y};10 20])}; / .[x;y;z;v]
  {(.[1 2 3;(),(::);{x+y};10];.[1 2 3;(),(::);{x+y};10 20 30];.[d1;(();1);{x+y};10];.[d1;(2;());{x+y};10];.[d1;(();());{x+y};10])};
  {(.[d1;(::;1);{x+y};10];.[d1;(::;1);{x+y};10 20 30];.[d1;(2;::);{x+y};10];.[d1;(2;::);{x+y};10 20 30];.[d1;(2;1);{x+y};10];.[d1;(2;1 2);{x+y};10];.[d1;(2;1 2);{x+y};10 20])};
  {(.[d1;(0 2;1);{x+y};10];.[d1;(0 2;1);{x+y};10 20];.[d1;(0 2;0 1);{x+y};10];.[d1;(0 2;0 1);{x+y};10 20];.[d1;(0 2;0 1);{x+y};(10;20 30)];.[d1;(0 2;0 1);{x+y};(10 20;30 40)])};
  {(.[d2;(1;`a);{x+y};10];.[d2;(1;`a`b);{x+y};10];.[d2;(1;`a`b);{x+y};10 20];.[d2;(1 2;`a);{x+y};10];.[d2;(1 2;`a);{x+y};10 20];.[d2;(1 2;`a`b);{x+y};10];.[d2;(1 2;`a`b);{x+y};(10;20 30)])};
  {(.[d2;(1 2;`a`b);{x+y};10 20];.[d2;(1 2;`a`b);{x+y};(10 20;30 40)];.[d3;(1;`a`b!1 1);{x+y};10];.[d3;(1;`a`b!1 1);{x+y};10 20];.[d3;(1;`a`b!1 1);{x+y};`d`c!10 20])};
  {(.[d3;(1;`a`b!1 1;`c);{x+y};10];.[d3;(1;([]a:1 2;b:1 2));{x+y};10];.[d3;(1;([]a:1 2;b:1 2));{x+y};10 20];.[d3;(1;([]a:1 2;b:1 2));{x+y};(10;20 30)];.[d3;(1;([]a:1 2;b:1 2));{x+y};(10 20;30 40)])};
  {(.[d3;(1;([]a:1 2;b:1 2));{x+y};([] d:10 20;c:30 40)];.[d3;(1;([]a:1 2;b:1 2);`c);{x+y};10];.[d3;(1;([]a:1 2;b:1 2);`c);{x+y};10 20])};
  {(.[d4;(1;::);{x+y};10];.[d4;(1;::);{x+y};10];.[d4;(1;::);{x+y};10 20 30];.[d4;(1;::);{x+y};([]a:10 20 30)])};
  {(.[d4;(1;1);{x+y};10];.[d4;(1;1);{x+y};10 20];.[d4;(1;1);{x+y};`b`a!10 20])};
  {(.[d4;(1;1 2);{x+y};10];.[d4;(1;1 2);{x+y};10 20];.[d4;(1;1 2);{x+y};(10;20 30)];.[d4;(1;1 2);{x+y};(10 20;30 40)];.[d4;(1;1 2);{x+y};([]b:10 20;a:30 40)])};
  {(.[d4;(1;1 2;`a);{x+y};10];.[d4;(1;1 2;`a);{x+y};10 20];.[d4;(1;::;`a);{x+y};10];.[d4;(1;::;`a);{x+y};10 20 30])};
  {({x+1}each 1;{x+1}each 1 2;{x+1}each `a`b!1 2;{x+1}each t;{x+1}each tk;{x+1}each d5)}; / each 1
  {({x+y}'[1;1];{x+y}'[1;1 2];{x+y}'[1 2;1];{x+y}'[1 2;1 2];{x+y}'[`a`b!1 2;1 2];{x+y}'[1 2;`a`b!1 2];{x+y}'[`a`b!1 2;`b`a!1 2];{x+y}'[`a`b!1 2;`b`c!1 2])}; / each 2
  {({x+y}'[1;t];{x+y}'[til 10;t];{x+y}'[t;t];{x+y}'[t;`b`c xcol t];{x+y}'[1;d5];{x+y}'[d5;1];{x+y}'[d5;d5])};
  {({x+y+z}'[1;2;3];{x+y+z}'[1;2;3 2];{x+y+z}'[1;1 2;1 3];{x+y+z}'[1 1;1 2;1 3];{x+y+z}'[`a`b!1 2;2;3];{x+y+z}'[`a`b!1 4;2;`a`b!3 4];{x+y+z}'[`a`b!1 2;`a`b!2 3;`a`b!3 4])}; / each 3
  {(@[{{x+y+z}'[`a`b!1 2;`b`a!2 3;`a`b!3 4]};1;::];{x+y+z}'[1 2;`a`b!2 3;`a`b!3 4];{x+y+z}'[`a`b!1 2;2 3;`a`b!3 4])};
  {({0|x-1}/[10];{0|x-1}\[10];{0|x-1}\[0];{0|x-1}\[0])}; / f/[] f\[], iterate
  {({x-1}/[10;10];{x-1}\[10;10];{x-1}/[0;10];{x-1}\[0;10];@[{{x-1}/[10i;10]};1;::])}; / iterate N times, 3.x vs 10i -> exception
  {({x-1}/[{x>0};10];{x-1}\[{x>0};10];{x-1}/[{x>0};0];{x-1}\[{x>0};0])}; / iterate while f[x]
  {({x+y}/[0];{x+y}\[0];{x+y}/[1 2];{x+y}\[1 2];{x+y}/[`a`b!1 2];{x+y}\[`a`b!1 2];{x+y}/[t];{x+y}\[t];{x+y}\[1 2 3 4];{x+y}/[1 2 3 4];{x+y}/[enlist[`a]!(),1];{x+y}\[enlist[`a]!(),1])}; / f[arg]
  {({x+y}/[1;2];{x+y}\[1;2];{x+y}/[1;2 3];{x+y}\[1;2 3];{x+y}/[1;2 3 4];{x+y}\[1;2 3 4])}; / f[v;a]
  {({x+y}/[1;`a`b!1 2];{x+y}\[1;`a`b!1 2];{x+y}/[1;d5];{x+y}\[1;d5];{x+y}/[`a`b!1 2;1];{x+y}\[`a`b!1 2;1];{x+y}/[`a`b!1 2;1 2];{x+y}\[`a`b!1 2;1 2])};
  {({x+y}/[`a`b!1 2;1 2 3];{x+y}/[`a`b!1 2;1 2 3];{x+y}/[1;t];{x+y}\[1;t];{x+y}\[1 2;t];{x+y}/[1 2;t];{x+y}/[1;()!()];{x+y}\[1;()!()];{x+y}/[()!()];{x+y}\[()!()])};
  {({x+y}/[()];{x+y}\[()];{x+y}/[`$()];{x+y}\[`$()];{x+y}/[1;()];{x+y}\[1;()];{x+y}/[1;`$()];{x+y}\[1;`$()];{x+y}/[(`$())!`int$()];{x+y}\[(`$())!`int$()];{x+y}/[1;(`$())!`int$()];{x+y}\[1;(`$())!`int$()])};
  {({x+y}/[1;`$();`$()];{x+y}\[1;`$();`$()];{x+y}/[1;`$();()];{x+y}\[1;`$();()])}; / notice that fn is bad
  {({x+y+z}/[1;2;3];{x+y+z}\[1;2;3];{x+y+z}/[1;1 2;3];{x+y+z}\[1;1 2;3];{x+y+z}/[1;2 3 4;3];{x+y+z}\[1;2 3 4;3])}; / f[v;a1;a2]
  {({x+y+z}/[1;`a`b!1 2;1];{x+y+z}\[1;`a`b!1 2;1];{x+y+z}/[1;`a`b!1 2;1 2];{x+y+z}\[1;`a`b!1 2;1 2];{x+y+z}/[1;`a`b`c!1 2 3;1 2 3];{x+y+z}\[1;`a`b`c!1 2 3;1 2 3])};
  {(1{x+y}/:1;1{x+y}\:1;1{x+y}/:1 2;1 2{x+y}\:1;1 2{x+y}/:1 2;1 2{x+y}/:\:1 2;1{x+y}/:d5;d5{x+y}\:1;1{x+y}/:`a`b`c!1 2 3;(`a`b`c!1 2 3){x+y}\:1;1{x+y}/:()!())}; / each right/left
  {({x+1}':[1];{x+1}':[1 2];{x+1}':[`a`b!1 2];{x+1}':[t];{x+1}':[tk];{x+1}':[d5])}; / each prior - peach
  {({x+y}':[1];{x+y}':[1 2];{x+y}':[1 2 3];{x+y}':[1;1];{x+y}':[1;1 2];{x+y}':[1;1 2 3];{x+y}':[1;d5];{x+y}':[1;`a`b!1 2];{x+y}':[t];{x+y}':[()!()];{x+y}':[1;()!()])}; / general case
  {((')[{x+1};{x+1}][1];(')[{x+1};{x+y}][1;2])}; / composition
  {({x+1}each)1 2 3}; / check that (f each) arg is ok
  {@[{`:localhost:111 "fail"};1;::]}; / `:syms are treated well
  {(')[{x};{z}]1}; / composition args
  {(0 0;0 0)/[0;1 1]}; / simple type in adverb
  {(select from t where a>5;update b*10 from t where a>5)}; / QSQL
  {{(select from t where a>x;update b*10 from t where a>x)}[5]};
  {l:5;(select from t where a>l;update b*10 from t where a>l)};
  {1}
 );

tstfn:{
  x+1;
  (+)[10+20;30+40]+(10+20);
  $[0<10;20;30]+40;
  do[1;2+4;6+6];
  i:2;while[i;10+20;i-:1];
  if[0<10;20+40];
  {x+1}each 1 2;
  {x+1}peach 1 2;
  {x+y}'[1 2;1];
  {x+y}/[1;1 2];
  {x+y}':[1;1 2];
  {x+y}\[1;1 2];
  1{x+y}/:1 2;
  1 2{x+y}\: 1;
  @[1 2 3;1;{x+1}];
  @[1 2 3;1;{x+y};2];
  .[(1 2;1 3);1 1;{x+1}];
  .[(1 2;1 3);1 1;{x+y};2];
 };

tests2:(
  {.d2.r[{x+1};1]=2}; / run works
  {.d2.r[{x+y};1 2]=3};
  {10=.d2.r[{x[`a]:10;x};enlist `a`b!1 2]`a};
  {.d2.r[{x[`a]+y[`b]};([] a:1 2;b:2 3)]=4};
  {.d2.i[{x+1};1];.d2.cont[]=2}; / init + continue
  {.d2.ba[{x+1;x+2;x+3};2];if[not "Breakpoint"~first .d2.r[{x+1;x+2;x+3};1];:0b];.d2.cont[]=4}; / break + cont
  {.d2.ba[{x+1;x+2;x+3};2];if[not "Breakpoint"~first .d2.r[{x+1;x+2;x+3};1];:0b];if[not "Running"~first .d2.l[];:0b]; .d2.l[]=4}; / break + l
  {.d2.r[{1;ssr[1;2;3;4];1};1];if[not 7=.d2.fr 1;:0b];.d2.l[];if[not 7=.d2.fr 1;:0b];.d2.ef[];if[not 7=.d2.fr 1;:0b];.d2.nxt[];if[not 7=.d2.fr 1;:0b];.d2.nexp[];if[not 7=.d2.fr 1;:0b];.d2.cont[];if[not 7=.d2.fr 1;:0b];.d2.s[];if[not 7=.d2.fr 1;:0b];1b};
  {.d2.r[{1+neg 2;1+`a;1};1];if[not 7=.d2.fr 1;:0b];.d2.l[];if[not 7=.d2.fr 1;:0b];.d2.ef[];if[not 7=.d2.fr 1;:0b];.d2.nxt[];if[not 7=.d2.fr 1;:0b];.d2.nexp[];if[not 7=.d2.fr 1;:0b];.d2.cont[];if[not 7=.d2.fr 1;:0b];.d2.s[];if[not 7=.d2.fr 1;:0b];1b};
  {.d2.i[tstfn;1];i:0;while[4<.d2.fr 2;i+:1;.d2.s[]];i=1578}; / s[]
  {.d2.noDbg:0;.d2.i[tstfn;1];i:0;while[4<.d2.fr 2;i+:1;.d2.s[]];i=1578};
  {.d2.na:1;.d2.i[tstfn;1];i:0;while[4<.d2.fr 2;i+:1;.d2.s[]];i=158};
  {.d2.i[tstfn;1];i:0;while[4<.d2.fr 2;i+:1;.d2.l[]];i=70};  / l[]
  {.d2.noDbg:0;.d2.i[tstfn;1];i:0;while[4<.d2.fr 2;i+:1;.d2.l[]];i=391};
  {.d2.na:1;.d2.i[tstfn;1];i:0;while[4<.d2.fr 2;i+:1;.d2.l[]];i=38};
  {.d2.i[tstfn;1];i:0;while[4<.d2.fr 2;i+:1;.d2.nexp[]];i=61}; / nexp[]
  {.d2.noDbg:0;.d2.i[tstfn;1];i:0;while[4<.d2.fr 2;i+:1;.d2.nexp[]];i=61};
  {.d2.na:1;.d2.i[tstfn;1];i:0;while[4<.d2.fr 2;i+:1;.d2.nexp[]];i=61};
  {.d2.i[tstfn;1];i:0;while[4<.d2.fr 2;i+:1;.d2.nxt[]];i=38}; / nxt[]
  {.d2.noDbg:0;.d2.i[tstfn;1];i:0;while[4<.d2.fr 2;i+:1;.d2.nxt[]];i=38};
  {.d2.na:1;.d2.i[tstfn;1];i:0;while[4<.d2.fr 2;i+:1;.d2.nxt[]];i=38};
  {.d2.i[tstfn;1];i:0;while[4<.d2.fr 2;i+:1;$[(::)~.d2.fr 3;.d2.l[];.d2.ef[]]];i=70}; / ef[]
  {.d2.noDbg:0;.d2.i[tstfn;1];i:0;while[4<.d2.fr 2;i+:1;$[(::)~.d2.fr 3;.d2.l[];.d2.ef[]]];i=62};
  {.d2.ba[{x+1};1];.d2.i[tstfn;1];i:0;while[1<.d2.fr 2;i+:1;.d2.cont[]];i=7}; / test all fns vs stops in bp
  {.d2.ba[{x+1};1];.d2.i[tstfn;1];i:0;while[1<.d2.fr 2;i+:1;.d2.nxt[]];i=48};
  {.d2.ba[{x+1};1];.d2.i[tstfn;1];i:0;while[1<.d2.fr 2;i+:1;.d2.nexp[]];i=71};
  {.d2.ba[{x+1};1];.d2.i[tstfn;1];i:0;while[1<.d2.fr 2;i+:1;.d2.ef[]];i=7};
  {.d2.ba[{x+1};1];.d2.bd[{x+1};1];.d2.i[tstfn;1];i:0;while[1<.d2.fr 2;i+:1;.d2.cont[]];i=1}; / add/set/delete/all delete work for bps
  {.d2.ba[{x+1};1];.d2.bs[{x+1};5];.d2.i[tstfn;1];i:0;while[1<.d2.fr 2;i+:1;.d2.cont[]];i=1};
  {.d2.ba[{x+1};1];.d2.bc[];.d2.i[tstfn;1];i:0;while[1<.d2.fr 2;i+:1;.d2.cont[]];i=1};
  {.d2.r[{l:10;l2:20;{[a;c] m:100; c+`a; k:30}[10;20]};1];all (`a`c`m`k!(10;20;100;()))~/:(.d2.v[];.d2.v[0])};
  {.d2.r[{l:10;l2:20;{[a;c] m:100; c+`a; k:30}[10;20]};1];all (`x`l`l2!(1;10;20))~.d2.v[1]};
  {.d2.e:1;.d2.r[{@[neg;`a;0];@[{neg x};`a;0]};1];(not .d2.fr[3]~(::))&1=.d2.fr[1]};
  {.d2.e:1;.d2.r[{@[neg;`a;0];@[neg;`b;1]};1];12=.d2.fr[1]};
  {.d2.e:1;.d2.r[{@[{neg x};`a;0];@[neg;`b;1]};1];12=.d2.fr[1]};
  {.d2.tm:0D00:00:00.010;a:"Exception: Dbg timeout"~first .d2.r[{do[10000;exp 23.12323];123};1];.d2.tm:0D01;a&123=.d2.cont[]};
  {1b}
 )

runTest'[til count tests;tests];

runTest2'[til count tests2;tests2];
